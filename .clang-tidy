Checks: >
  -*,
  bugprone-*,
  -bugprone-easily-swappable-parameters,
  -bugprone-exception-escape,
  cppcoreguidelines-*,
  -cppcoreguidelines-pro-type-reinterpret-cast,
  -cppcoreguidelines-pro-type-const-cast,
  -cppcoreguidelines-pro-type-vararg,
  -cppcoreguidelines-prefer-member-initializer,
  modernize-*,
  -modernize-use-trailing-return-type,
  performance-*,
  portability-*,
  readability-*,
  -readability-function-size,
  -readability-identifier-length,
  -readability-redundant-access-specifiers,
  -readability-function-cognitive-complexity

WarningsAsErrors: '*'

CheckOptions:
  - { key: readability-identifier-naming.ClassMemberCase, value: lower_case }
  - { key: readability-identifier-naming.PrivateMemberCase, value: lower_case }
  - { key: readability-identifier-naming.ProtectedMemberCase, value: lower_case }
  - { key: readability-identifier-naming.PublicMemberCase, value: lower_case }

  - { key: readability-identifier-naming.ClassMemberSuffix, value: _ }
  - { key: readability-identifier-naming.PrivateMemberSuffix, value: _ }
  - { key: readability-identifier-naming.ProtectedMemberSuffix, value: _ }
  - { key: readability-identifier-naming.PublicMemberSuffix, value: _ }

  - { key: readability-identifier-naming.ClassMethodCase, value: CamelCase }
  - { key: readability-identifier-naming.PrivateMethodCase, value: CamelCase }
  - { key: readability-identifier-naming.ProtectedMethodCase, value: CamelCase }
  - { key: readability-identifier-naming.PublicMethodCase, value: CamelCase }

  - { key: readability-identifier-naming.NamespaceCase, value: lower_case }
  - { key: readability-identifier-naming.ClassCase, value: CamelCase }
  - { key: readability-identifier-naming.StructCase, value: CamelCase }
  - { key: readability-identifier-naming.TemplateParameterCase, value: CamelCase }
  - { key: readability-identifier-naming.VariableCase, value: lower_case }

  - { key: readability-identifier-naming.EnumConstantCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.ConstantCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.ConstexprVariableCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.GlobalVariableCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.GlobalConstantCase, value: UPPER_CASE }
  - { key: readability-identifier-naming.StaticConstantCase, value: UPPER_CASE }
  - { key: readability-implicit-bool-conversion.AllowIntegerConditions, value: 1 }
  - { key: readability-implicit-bool-conversion.AllowPointerConditions, value: 1 }